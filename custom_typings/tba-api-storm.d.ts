/** Declaration file generated by dts-gen */

export = tba_api_storm;

declare class tba_api_storm {
    constructor(...args: any[]);

    callAPI(...args: any[]): void;

    getDistrictEvents(...args: any[]): void;

    getDistrictEventsKeys(...args: any[]): void;

    getDistrictEventsSimple(...args: any[]): void;

    getDistrictList(...args: any[]): void;

    getDistrictRankings(...args: any[]): void;

    getDistrictTeams(...args: any[]): void;

    getDistrictTeamsKeys(...args: any[]): void;

    getDistrictTeamsSimple(...args: any[]): void;

    getEvent(...args: any[]): void;

    getEventAlliances(...args: any[]): void;

    getEventAwards(...args: any[]): void;

    getEventDistrictPoints(...args: any[]): void;

    getEventInsights(...args: any[]): void;

    getEventList(...args: any[]): void;

    getEventListKeys(...args: any[]): void;

    getEventListSimple(...args: any[]): void;

    getEventMatches(...args: any[]): void;

    getEventMatchesKeys(...args: any[]): void;

    getEventMatchesSimple(...args: any[]): void;

    getEventOprs(...args: any[]): void;

    getEventPredictions(...args: any[]): void;

    getEventRankings(...args: any[]): void;

    getEventSimple(...args: any[]): void;

    getEventTeams(...args: any[]): void;

    getEventTeamsKeys(...args: any[]): void;

    getEventTeamsSimple(...args: any[]): void;

    getMatch(...args: any[]): void;

    getMatchSimple(...args: any[]): void;

    getStatus(...args: any[]): void;

    getTeam(...args: any[]): void;

    getTeamAwards(...args: any[]): void;

    getTeamDistricts(...args: any[]): void;

    getTeamEventAwards(...args: any[]): void;

    getTeamEventList(...args: any[]): void;

    getTeamEventListKeys(...args: any[]): void;

    getTeamEventListSimple(...args: any[]): void;

    getTeamEventMatchList(...args: any[]): void;

    getTeamEventMatchListKeys(...args: any[]): void;

    getTeamEventMatchListSimple(...args: any[]): void;

    getTeamEventStatus(...args: any[]): void;

    getTeamList(...args: any[]): void;

    getTeamListSimple(...args: any[]): void;

    getTeamMatchList(...args: any[]): void;

    getTeamMatchListKeys(...args: any[]): void;

    getTeamMatchListSimple(...args: any[]): void;

    getTeamMedia(...args: any[]): void;

    getTeamRobots(...args: any[]): void;

    getTeamSimple(...args: any[]): void;

    getTeamSocialMedia(...args: any[]): void;

    getYearsParticipated(...args: any[]): void;

}

declare namespace tba_api_storm {
    namespace prototype {
        function callAPI(...args: any[]): void;

        function getDistrictEvents(...args: any[]): void;

        function getDistrictEventsKeys(...args: any[]): void;

        function getDistrictEventsSimple(...args: any[]): void;

        function getDistrictList(...args: any[]): void;

        function getDistrictRankings(...args: any[]): void;

        function getDistrictTeams(...args: any[]): void;

        function getDistrictTeamsKeys(...args: any[]): void;

        function getDistrictTeamsSimple(...args: any[]): void;

        function getEvent(...args: any[]): void;

        function getEventAlliances(...args: any[]): void;

        function getEventAwards(...args: any[]): void;

        function getEventDistrictPoints(...args: any[]): void;

        function getEventInsights(...args: any[]): void;

        function getEventList(...args: any[]): void;

        function getEventListKeys(...args: any[]): void;

        function getEventListSimple(...args: any[]): void;

        function getEventMatches(...args: any[]): void;

        function getEventMatchesKeys(...args: any[]): void;

        function getEventMatchesSimple(...args: any[]): void;

        function getEventOprs(...args: any[]): void;

        function getEventPredictions(...args: any[]): void;

        function getEventRankings(...args: any[]): void;

        function getEventSimple(...args: any[]): void;

        function getEventTeams(...args: any[]): void;

        function getEventTeamsKeys(...args: any[]): void;

        function getEventTeamsSimple(...args: any[]): void;

        function getMatch(...args: any[]): void;

        function getMatchSimple(...args: any[]): void;

        function getStatus(...args: any[]): void;

        function getTeam(...args: any[]): void;

        function getTeamAwards(...args: any[]): void;

        function getTeamDistricts(...args: any[]): void;

        function getTeamEventAwards(...args: any[]): void;

        function getTeamEventList(...args: any[]): void;

        function getTeamEventListKeys(...args: any[]): void;

        function getTeamEventListSimple(...args: any[]): void;

        function getTeamEventMatchList(...args: any[]): void;

        function getTeamEventMatchListKeys(...args: any[]): void;

        function getTeamEventMatchListSimple(...args: any[]): void;

        function getTeamEventStatus(...args: any[]): void;

        function getTeamList(...args: any[]): void;

        function getTeamListSimple(...args: any[]): void;

        function getTeamMatchList(...args: any[]): void;

        function getTeamMatchListKeys(...args: any[]): void;

        function getTeamMatchListSimple(...args: any[]): void;

        function getTeamMedia(...args: any[]): void;

        function getTeamRobots(...args: any[]): void;

        function getTeamSimple(...args: any[]): void;

        function getTeamSocialMedia(...args: any[]): void;

        function getYearsParticipated(...args: any[]): void;

    }

}

